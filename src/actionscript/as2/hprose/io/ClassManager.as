/**********************************************************\|                                                          ||                          hprose                          ||                                                          || Official WebSite: http://www.hprose.com/                 ||                   http://www.hprose.net/                 ||                   http://www.hprose.org/                 ||                                                          |\**********************************************************//**********************************************************\ *                                                        * * ClassManager.as                                        * *                                                        * * hprose ClassManager for ActionScript 2.0.              * *                                                        * * LastModified: Dec 11, 2012                             * * Author: Ma Bingyao <andot@hprfc.com>                   * *                                                        *\**********************************************************/class hprose.io.ClassManager {    private static var classCache1:Object = {};    private static var classCache2:Object = {};            public static function register(classReference, alias:String) {        classCache1[classReference] = alias;        classCache2[alias] = classReference;    }    public static function getClassAlias(obj):String {        var classReference = obj.constructor;        var alias:String = classCache1[classReference];        if (alias) {            return alias;        }        if (typeof(obj.getClassName) == 'function') {            alias = obj.getClassName();        }        else {            alias = "Object";        }        ClassManager.register(classReference, alias);                return alias;    }    private static function findClass(cn:Array, poslist:Array, i:Number, c:String):Function {        if (i < poslist.length) {            var pos:Number = poslist[i];            cn[pos] = c;            var classReference:Function = findClass(cn, poslist, i + 1, '.');            if (i + 1 < poslist.length) {                if (classReference == null) {                    classReference = findClass(cn, poslist, i + 1, '_');                }            }            return classReference;        }        return eval(cn.join(''));    }    public static function getClass(alias:String) {        var classReference = classCache2[alias];        if (classReference) {            return classReference;        }        classReference = eval(alias);        if (classReference) {            register(classReference, alias);            return classReference;        }        var poslist:Array = [];        var pos:Number = alias.indexOf("_");        while (pos > -1) {            poslist[poslist.length] = pos;            pos = alias.indexOf("_", pos + 1);        }        if (poslist.length > 0) {            var cn:Array = alias.split('');            classReference = findClass(cn, poslist, 0, '.');            if (classReference == null) {                classReference = findClass(cn, poslist, 0, '_');            }        }        if (classReference == null) {            classReference = function () {                this.getClassName = function ():String {                    return alias;                }            }        }        register(classReference, alias);        return classReference;    }}